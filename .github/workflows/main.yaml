name: main
on:
  push:
    branches:
    - main
    tags:
    - "*"
  pull_request:
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.0.2
      with:
        set-safe-directory: true
    - uses: actions/setup-python@v3
    - uses: pre-commit/action@v3.0.0
  test:
    name: test
    runs-on: ubuntu-latest
    container: golang:1.23-alpine3.20
    steps:
    - name: Install git
      run: apk add --update --no-cache git
    - name: Checkout code
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 0
        set-safe-directory: true
    - name: Test
      run: |
        go test ./...
  build:
    name: build
    runs-on: ubuntu-latest
    container: golang:1.23-alpine3.20
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    steps:
      - name: Install git
        run: apk add --update --no-cache git
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          set-safe-directory: true
      - name: Build
        run: |
          mkdir release-artifacts
          GOFLAGS=-buildvcs=false GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o release-artifacts ./...
        shell: sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Archive release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
  create-release:
    name: Create Release
    needs:
      [pre-commit, test, build]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag_name: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2
        with:
          fetch-depth: 0
          set-safe-directory: true
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v3
        id: git-cliff
        with:
          config: cliff.toml
          args: --verbose --latest
        env:
          OUTPUT: changelog.md
      - uses: actions/download-artifact@v4
        with:
          name: release-artifacts-linux-amd64
          path: release-artifacts
      - name: Get the tag
        id: get_tag
        run: echo ::set-output name=git_tag::${GITHUB_REF/refs\/tags\//}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.git_tag }}
          release_name: ${{ steps.get_tag.outputs.git_tag }}
          body_path: ${{ steps.git-cliff.outputs.changelog }}
          draft: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') != true }}
          prerelease: ${{ startsWith(steps.get_tag.outputs.git_tag, 'nightly') }}
  release-artifacts:
    name: Release Artifacts
    needs:
      [create-release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [arm64, amd64]
        exclude:
          - os: windows
            arch: arm64
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-artifacts-${{ matrix.os }}-${{ matrix.arch }}
          path: release-artifacts
      - name: Upload Release Asset - ${{ matrix.os }}-${{ matrix.arch }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./release-artifacts/infinity_dialog-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_name: infinity_dialog-${{ needs.create-release.outputs.tag_name }}-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/tar+gzip
